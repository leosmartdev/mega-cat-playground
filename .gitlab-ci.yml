image: node:lts

before_script:
  - node -v

# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
cache:
  paths:
    - node_modules/

stages:
  - lint
  - test
  - build
  - deploy

test:lint:
  stage: lint
  allow_failure: false
  script:
    - npm run lint

test:jest:
  stage: test
  allow_failure: false
  script:
    - npm ci
    - npm run test

build:
  stage: build
  allow_failure: false
  script:
    - npm ci
    - npm run build

bookcoin-dev:
  stage: deploy
  before_script:
    ##
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## checks public key on remotes server using IP address stored in
    ## BKCN_DEV_IPADDRESS variable and add it to known hosts.
    ## It is protecting from men-in-the-middle attack and is necessary to work,
    ## otherwise the job will fail.
    ##
    - ssh-keyscan $BKCN_DEV_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - ssh $BKCN_PROD_SSH_USER@$BKCN_DEV_IPADDRESS "./update_server.sh"

  only:
    - main
